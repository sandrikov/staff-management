application {
    config {
        applicationType monolith,
        baseName staff,
        buildTool maven
        packageName ru.otus.coursework.staff,
        authenticationType jwt,
        databaseType sql
        enableTranslation false
        dtoSuffix Dto
        serverPort 8080
        prodDatabaseType postgresql,
        devDatabaseType h2Memory,
        clientFramework angular,
        databaseType sql
    }
    entities *
}

entity Department {
	departmentName String required
}

entity Job {
	jobTitle String required
    //head Boolean required
}

entity Employee {
	firstName String required
	lastName String required
	email String
	phoneNumber String
	username String
	hireDate Instant
	salary Long
}

entity JobHistory {
	startDate Instant required
	endDate Instant
}

entity Role {
	roleName String required
}

entity Project {
	projectName String required
    status ProjectStatus required
}

entity ProjectMember {
	startDate Instant required
	endDate Instant 
}

relationship OneToOne {
	ProjectMember{project(projectName) required} to Project
	ProjectMember{role(roleName)} to Role
	ProjectMember{employee(lastName)} to Employee
}

enum ProjectStatus {
    ACTIVE, CLOSED
}

//relationship ManyToMany {
//	Job{task(title)} to Task{job}
//}

relationship OneToMany {
	Employee to Job{employee}
	Department to Employee{department}
}

relationship ManyToOne {
	Employee{manager} to Employee
}

relationship OneToOne {
	JobHistory{job} to Job
	JobHistory{department} to Department
	JobHistory{employee} to Employee
}

// Set pagination options
//paginate JobHistory, Employee with infinite-scroll
//paginate Job with pagination

// Use Data Transfer Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl //except Employee, Job

// Set an angular suffix
// angularSuffix * with mySuffix
